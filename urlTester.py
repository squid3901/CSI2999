import requests, time, json


# requires file generated by urlFinder "outputUrlList.txt"
# index parameter is the line number in the file of the url to be tested

def specificUrlTest(urlListFile, index):
    urlList = open(urlListFile, encoding="utf8")
    for i, line in enumerate(urlList):
        if i+1 == index:
            tryUrl = line.strip()
            print(tryUrl)
            response = requests.get(tryUrl)
            print(response)


# a few tests
specificUrlTest("outputUrlList.txt", 1522)
time.sleep(4)
specificUrlTest("outputUrlList.txt", 7)
time.sleep(4)
specificUrlTest("outputUrlList.txt", 991)
time.sleep(4)
specificUrlTest("outputUrlList.txt", 104)


# only test this using the test list file "testUrlList.txt" for right now
# creates a text file, we probably won't end up using this
def allUrlTest(urlListFile):
    urlList = open(urlListFile, encoding="utf8")
    workingUrls = open("PCmagURLs.txt", "w+", encoding="utf8")
    for line in urlList:
        tryUrl = line.strip()
        response = requests.get(tryUrl)
        if response.status_code == 200:
            workingUrls.write(tryUrl)
        time.sleep(4)

#test
allUrlTest("testUrlList.txt")

# writes pairs of phone names and working urls to json file
# only test this using the test list file "testUrlList.txt" for right now
def allUrlJsonPrint(urlListFile):
    urlList = open(urlListFile, encoding="utf8")
    outputFile = open("PCmagUrls.json", "w+", encoding="utf8")
    phoneDict = {}
    for line in urlList:
        tryUrl = line.strip()
        p = tryUrl[30:len(tryUrl)].split("-")
        phoneName = ""
        for x in p:
            phoneName = phoneName + x + " "
        response = requests.get(tryUrl)
        print(phoneName)
        if response.status_code == 200:
            phoneDict[phoneName.strip()] = tryUrl
            print("success")
        time.sleep(4)
    jPhones = json.dumps(phoneDict)
    outputFile.write(jPhones)

#test
allUrlJsonPrint("testUrlList.txt")















